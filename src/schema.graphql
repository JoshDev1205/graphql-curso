type Query {
  hello(name: String): String!
  quantity: Int!
  user(id: ID): [User!]!
  author(id: ID): [Author!]!
  book(id: ID): [Book!]!
}

type User {
  id: ID!
  name: String!
  lastName: String!
  email: String!
}

type Author {
  id: ID!
  name: String!
  country: String!
  register_by: User!
  books: [Book!]!
}

type Book {
  id: ID!
  title: String!
  description: String!
  quantity: Int!
  price: Int!
  writted_by: Author!
  register_by: User!
}

type Mutation {
  createUser(data: createUserInput): User!
  updateUser(id: ID!, data: updateUserInput): User!
  createAuthor(data: createAuthorInput): Author!
  updateAuthor(id: ID!, data: updateAuthorInput): Author!
  createBook(data: createBookInput): Book!
  updateBook(id: ID!, data: updateBookInput): Book!
  deleteBook(id: ID!): Book!
}

type Subscription {
  count: Int!
}

input createUserInput {
  name: String!
  lastName: String!
  email: String!
  password: String!
}

input updateUserInput {
  name: String
  lastName: String
  email: String
  password: String
}

input createAuthorInput {
  name: String!
  country: String!
  register_by: ID!
}

input updateAuthorInput {
  name: String
  country: String
  register_by: ID
}

input createBookInput {
  title: String!
  description: String!
  quantity: Int!
  price: Int!
  writted_by: ID!
  register_by: ID!
}

input updateBookInput {
  title: String
  description: String
  quantity: Int
  price: Int
  writted_by: ID
  register_by: ID
}
